{
  "stats": {
    "suites": 8,
    "tests": 45,
    "passes": 0,
    "pending": 0,
    "failures": 45,
    "start": "2020-05-27T19:37:42.583Z",
    "end": "2020-05-27T19:37:42.637Z",
    "duration": 54,
    "testsRegistered": 45,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ad9547e5-5031-439a-9c36-303869ea44f8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
          "title": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon: ",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/evolutions-of/spec.js",
          "file": "/logic/evolutions-of/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Squirtle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Squirtle",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Squirtle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:19:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "faded879-7097-4980-93d9-1327b9b376d1",
              "parentUUID": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Wartortle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Wartortle",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Wartortle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:29:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "7509feac-1ab5-4444-a0f5-8d4f81c2bf44",
              "parentUUID": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Blastoise",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Blastoise",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Blastoise');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:39:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "8d9c3861-2776-4657-8857-d93b3e9fa65c",
              "parentUUID": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, DoesNotExist",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 3, DoesNotExist",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample3, 'DoesNotExist');\nconst expected = null;\nassert.strictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/evolutions-of/spec.js:45:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "edd1a2e2-8257-47c3-9ed2-94a58a268058",
              "parentUUID": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Mew",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 5, Mew",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample5, 'Mew');\nconst expected = [\n  { \"name\": \"Mew\", \"num\": \"151\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:53:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "01f6418e-1136-4f16-abd8-011c24ecbaa9",
              "parentUUID": "57d9fb31-fe9d-4f38-ac1b-a7a960098044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "faded879-7097-4980-93d9-1327b9b376d1",
            "7509feac-1ab5-4444-a0f5-8d4f81c2bf44",
            "8d9c3861-2776-4657-8857-d93b3e9fa65c",
            "edd1a2e2-8257-47c3-9ed2-94a58a268058",
            "01f6418e-1136-4f16-abd8-011c24ecbaa9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3837295-a309-43f2-b43a-8fbf70572140",
          "title": "findById(pokeData, id) : returns the pokemon object with the given id",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/find-by/id/spec.js",
          "file": "/logic/find-by/id/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 13",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 13",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 13);\nconst expected = {\n  \"id\": 13,\n  \"num\": \"013\",\n  \"name\": \"Weedle\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/013.png\",\n  \"type\": [\n    \"Bug\",\n    \"Poison\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"3.2 kg\",\n  \"candy\": \"Weedle Candy\",\n  \"candy_count\": 12,\n  \"egg\": \"2 km\",\n  \"spawn_chance\": 7.12,\n  \"avg_spawns\": 712,\n  \"spawn_time\": \"02:21\",\n  \"multipliers\": [\n    1.01,\n    1.09\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Flying\",\n    \"Psychic\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    { \"num\": \"014\", \"name\": \"Kakuna\" },\n    { \"num\": \"015\", \"name\": \"Beedrill\" }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 712,\n-   candy: 'Weedle Candy',\n-   candy_count: 12,\n-   egg: '2 km',\n-   height: '0.30 m',\n-   id: 13,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/013.png',\n-   multipliers: [\n-     1.01,\n-     1.09\n-   ],\n-   name: 'Weedle',\n-   next_evolution: [\n-     {\n-       name: 'Kakuna',\n-       num: '014'\n-     },\n-     {\n-       name: 'Beedrill',\n-       num: '015'\n-     }\n-   ],\n-   num: '013',\n-   spawn_chance: 7.12,\n-   spawn_time: '02:21',\n-   type: [\n-     'Bug',\n-     'Poison'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Flying',\n-     'Psychic',\n-     'Rock'\n-   ],\n-   weight: '3.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 712,\n-   candy: 'Weedle Candy',\n-   candy_count: 12,\n-   egg: '2 km',\n-   height: '0.30 m',\n-   id: 13,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/013.png',\n-   multipliers: [\n-     1.01,\n-     1.09\n-   ],\n-   name: 'Weedle',\n-   next_evolution: [\n-     {\n-       name: 'Kakuna',\n-       num: '014'\n-     },\n-     {\n-       name: 'Beedrill',\n-       num: '015'\n-     }\n-   ],\n-   num: '013',\n-   spawn_chance: 7.12,\n-   spawn_time: '02:21',\n-   type: [\n-     'Bug',\n-     'Poison'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Flying',\n-     'Psychic',\n-     'Rock'\n-   ],\n-   weight: '3.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:45:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "506e91b9-90a4-4bea-aa23-74c884d847bd",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, 16",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 16",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 16);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/id/spec.js:51:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "5a75a151-5eae-4919-89cb-04ec1cd6cb8a",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 46",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 46",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 46);\nconst expected = {\n  \"id\": 46,\n  \"num\": \"046\",\n  \"name\": \"Paras\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/046.png\",\n  \"type\": [\n    \"Bug\",\n    \"Grass\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"5.4 kg\",\n  \"candy\": \"Paras Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 2.36,\n  \"avg_spawns\": 236,\n  \"spawn_time\": \"01:42\",\n  \"multipliers\": [\n    2.02\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Ice\",\n    \"Poison\",\n    \"Flying\",\n    \"Bug\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"047\",\n      \"name\": \"Parasect\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 236,\n-   candy: 'Paras Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '0.30 m',\n-   id: 46,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/046.png',\n-   multipliers: [\n-     2.02\n-   ],\n-   name: 'Paras',\n-   next_evolution: [\n-     {\n-       name: 'Parasect',\n-       num: '047'\n-     }\n-   ],\n-   num: '046',\n-   spawn_chance: 2.36,\n-   spawn_time: '01:42',\n-   type: [\n-     'Bug',\n-     'Grass'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Ice',\n-     'Poison',\n-     'Flying',\n-     'Bug',\n-     'Rock'\n-   ],\n-   weight: '5.4 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 236,\n-   candy: 'Paras Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '0.30 m',\n-   id: 46,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/046.png',\n-   multipliers: [\n-     2.02\n-   ],\n-   name: 'Paras',\n-   next_evolution: [\n-     {\n-       name: 'Parasect',\n-       num: '047'\n-     }\n-   ],\n-   num: '046',\n-   spawn_chance: 2.36,\n-   spawn_time: '01:42',\n-   type: [\n-     'Bug',\n-     'Grass'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Ice',\n-     'Poison',\n-     'Flying',\n-     'Bug',\n-     'Rock'\n-   ],\n-   weight: '5.4 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:91:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "2127017d-1e57-46ee-99b6-60003982bc74",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 42",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 42",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 42);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/id/spec.js:97:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "ef53b1dd-f5f3-4c6a-8029-f0183561d2b4",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 84",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 84",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 84);\nconst expected = {\n  \"id\": 84,\n  \"num\": \"084\",\n  \"name\": \"Doduo\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/084.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.40 m\",\n  \"weight\": \"39.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 0.52,\n  \"avg_spawns\": 52,\n  \"spawn_time\": \"05:10\",\n  \"multipliers\": [\n    2.19,\n    2.24\n  ],\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"085\",\n      \"name\": \"Dodrio\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 52,\n-   candy: 'Doduo Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '1.40 m',\n-   id: 84,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/084.png',\n-   multipliers: [\n-     2.19,\n-     2.24\n-   ],\n-   name: 'Doduo',\n-   next_evolution: [\n-     {\n-       name: 'Dodrio',\n-       num: '085'\n-     }\n-   ],\n-   num: '084',\n-   spawn_chance: 0.52,\n-   spawn_time: '05:10',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '39.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 52,\n-   candy: 'Doduo Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '1.40 m',\n-   id: 84,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/084.png',\n-   multipliers: [\n-     2.19,\n-     2.24\n-   ],\n-   name: 'Doduo',\n-   next_evolution: [\n-     {\n-       name: 'Dodrio',\n-       num: '085'\n-     }\n-   ],\n-   num: '084',\n-   spawn_chance: 0.52,\n-   spawn_time: '05:10',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '39.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:134:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "eeb2b5e3-58f8-441a-bbb8-412f023c3cbc",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 85",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 85",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 85);\nconst expected = {\n  \"id\": 85,\n  \"num\": \"085\",\n  \"name\": \"Dodrio\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/085.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.80 m\",\n  \"weight\": \"85.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"egg\": \"Not in Eggs\",\n  \"spawn_chance\": 0.22,\n  \"avg_spawns\": 22,\n  \"spawn_time\": \"02:12\",\n  \"multipliers\": null,\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"prev_evolution\": [\n    {\n      \"num\": \"084\",\n      \"name\": \"Doduo\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 22,\n-   candy: 'Doduo Candy',\n-   egg: 'Not in Eggs',\n-   height: '1.80 m',\n-   id: 85,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/085.png',\n-   multipliers: null,\n-   name: 'Dodrio',\n-   num: '085',\n-   prev_evolution: [\n-     {\n-       name: 'Doduo',\n-       num: '084'\n-     }\n-   ],\n-   spawn_chance: 0.22,\n-   spawn_time: '02:12',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '85.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 22,\n-   candy: 'Doduo Candy',\n-   egg: 'Not in Eggs',\n-   height: '1.80 m',\n-   id: 85,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/085.png',\n-   multipliers: null,\n-   name: 'Dodrio',\n-   num: '085',\n-   prev_evolution: [\n-     {\n-       name: 'Doduo',\n-       num: '084'\n-     }\n-   ],\n-   spawn_chance: 0.22,\n-   spawn_time: '02:12',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '85.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:167:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "2b2c7853-a00b-471d-bdf0-4792cf3ee817",
              "parentUUID": "f3837295-a309-43f2-b43a-8fbf70572140",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "506e91b9-90a4-4bea-aa23-74c884d847bd",
            "5a75a151-5eae-4919-89cb-04ec1cd6cb8a",
            "2127017d-1e57-46ee-99b6-60003982bc74",
            "ef53b1dd-f5f3-4c6a-8029-f0183561d2b4",
            "eeb2b5e3-58f8-441a-bbb8-412f023c3cbc",
            "2b2c7853-a00b-471d-bdf0-4792cf3ee817"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
          "title": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/find-by/key-value/spec.js",
          "file": "/logic/find-by/key-value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, name, Weedle",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, name, Weedle",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'name', 'Weedle');\nconst expected = [\n  { \"num\": \"013\", \"name\": \"Weedle\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:18:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "ad189551-e3ae-4542-8f70-e199a07edd69",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, id, 12",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, id, 12",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'id', \"12\");\nconst expected = [\n  { \"num\": \"012\", \"name\": \"Butterfree\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:26:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "01b9c1be-0c28-4cb7-8e38-f42b9fe4f222",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, doesNotExist, hi!",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, doesNotExist, hi!",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'doesNotExist', 'hi!');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:32:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "200405d7-3668-4b80-893a-29f979242a59",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name, Mew",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, name, Mew",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'name', 'Mew');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:38:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "cb4ee0b6-247e-413a-861e-f84bb2d1b8ed",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, Not in Eggs",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, Not in Eggs",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', 'Not in Eggs');\nconst expected = [\n  { \"num\": \"085\", \"name\": \"Dodrio\" },\n  { \"num\": \"087\", \"name\": \"Dewgong\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dodrio',\n-     num: '085'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dodrio',\n-     num: '085'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:47:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "bce63ff2-724e-4697-94d5-48992b445efe",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, 5 km",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, 5 km",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', '5 km');\nconst expected = [\n  { \"num\": \"083\", \"name\": \"Farfetch'd\" },\n  { \"num\": \"084\", \"name\": \"Doduo\" },\n  { \"num\": \"086\", \"name\": \"Seel\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: \"Farfetch'd\",\n-     num: '083'\n-   },\n-   {\n-     name: 'Doduo',\n-     num: '084'\n-   },\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: \"Farfetch'd\",\n-     num: '083'\n-   },\n-   {\n-     name: 'Doduo',\n-     num: '084'\n-   },\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:57:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "5605688a-f9ed-4e3e-8572-0ef00977a3f0",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, spawn_time, N/A",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 4, spawn_time, N/A",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample4, 'spawn_time', 'N/A');\nconst expected = [\n  { \"num\": \"132\", \"name\": \"Ditto\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:65:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "577be4a2-7418-43ab-9b94-75d34cf0fd3a",
              "parentUUID": "c3894ce6-ed69-4fd7-8d95-a2a0213a0d81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ad189551-e3ae-4542-8f70-e199a07edd69",
            "01b9c1be-0c28-4cb7-8e38-f42b9fe4f222",
            "200405d7-3668-4b80-893a-29f979242a59",
            "cb4ee0b6-247e-413a-861e-f84bb2d1b8ed",
            "bce63ff2-724e-4697-94d5-48992b445efe",
            "5605688a-f9ed-4e3e-8572-0ef00977a3f0",
            "577be4a2-7418-43ab-9b94-75d34cf0fd3a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
          "title": "findByType(pokeData, type) : returns the name and number of all pokemon with this type",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/find-by/type/spec.js",
          "file": "/logic/find-by/type/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 1, Bug",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample1, 'Bug');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Metapod', num: '011' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' },\n  { name: 'Kakuna', num: '014' },\n  { name: 'Beedrill', num: '015' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Metapod',\n-     num: '011'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   },\n-   {\n-     name: 'Kakuna',\n-     num: '014'\n-   },\n-   {\n-     name: 'Beedrill',\n-     num: '015'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Metapod',\n-     num: '011'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   },\n-   {\n-     name: 'Kakuna',\n-     num: '014'\n-   },\n-   {\n-     name: 'Beedrill',\n-     num: '015'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:24:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "98855871-c0a4-43cf-ba44-8b8e469a4ac4",
              "parentUUID": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 2, Bug",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample2, 'Bug');\nconst expected = [\n  { name: 'Paras', num: '046' },\n  { name: 'Parasect', num: '047' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:33:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "2953d933-e4a1-4f74-a08e-fe6d9959c5dc",
              "parentUUID": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Water",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 3, Water",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample3, 'Water');\nconst expected = [\n  { name: 'Seel', num: '086' },\n  { name: 'Dewgong', num: '087' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:42:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "814ee8be-bf1e-4d2b-8746-9de074ec5da5",
              "parentUUID": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample4, 'Normal');\nconst expected = [\n  { name: 'Tauros', num: '128' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:51:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "589fb9aa-883a-4d3d-b123-e4246cf2af68",
              "parentUUID": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 5, Dragon",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample5, 'Dragon');\nconst expected = [\n  { name: 'Dratini', num: '147' },\n  { name: 'Dragonair', num: '148' },\n  { name: 'Dragonite', num: '149' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:61:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "ff5e1389-9ce9-4749-8b6a-a0fc5d41545b",
              "parentUUID": "0bbcfa26-84e0-425e-9742-cefb2d3a2e7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "98855871-c0a4-43cf-ba44-8b8e469a4ac4",
            "2953d933-e4a1-4f74-a08e-fe6d9959c5dc",
            "814ee8be-bf1e-4d2b-8746-9de074ec5da5",
            "589fb9aa-883a-4d3d-b123-e4246cf2af68",
            "ff5e1389-9ce9-4749-8b6a-a0fc5d41545b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "394b6ada-cb0f-4ef9-9603-a399b939f40f",
          "title": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/find-by/value/spec.js",
          "file": "/logic/find-by/value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 12",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 1, 12",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample1, '12');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:20:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "ea8e176a-95b5-496a-a39d-102c8c998a36",
              "parentUUID": "394b6ada-cb0f-4ef9-9603-a399b939f40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample2, 'Bug');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/value/spec.js:26:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "a19fa0b6-8cdd-41e3-a82d-ff910c85561c",
              "parentUUID": "394b6ada-cb0f-4ef9-9603-a399b939f40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, None",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 4, None",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample4, 'None');\nconst expected = [\n  { name: 'Mr. Mime', num: '122' },\n  { name: 'Scyther', num: '123' },\n  { name: 'Jynx', num: '124' },\n  { name: 'Electabuzz', num: '125' },\n  { name: 'Magmar', num: '126' },\n  { name: 'Pinsir', num: '127' },\n  { name: 'Tauros', num: '128' },\n  { name: 'Lapras', num: '131' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mr. Mime',\n-     num: '122'\n-   },\n-   {\n-     name: 'Scyther',\n-     num: '123'\n-   },\n-   {\n-     name: 'Jynx',\n-     num: '124'\n-   },\n-   {\n-     name: 'Electabuzz',\n-     num: '125'\n-   },\n-   {\n-     name: 'Magmar',\n-     num: '126'\n-   },\n-   {\n-     name: 'Pinsir',\n-     num: '127'\n-   },\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Lapras',\n-     num: '131'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mr. Mime',\n-     num: '122'\n-   },\n-   {\n-     name: 'Scyther',\n-     num: '123'\n-   },\n-   {\n-     name: 'Jynx',\n-     num: '124'\n-   },\n-   {\n-     name: 'Electabuzz',\n-     num: '125'\n-   },\n-   {\n-     name: 'Magmar',\n-     num: '126'\n-   },\n-   {\n-     name: 'Pinsir',\n-     num: '127'\n-   },\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Lapras',\n-     num: '131'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:42:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "d01c1d03-2cd9-40f5-aae6-eab9b0cff23f",
              "parentUUID": "394b6ada-cb0f-4ef9-9603-a399b939f40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, null",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 5, null",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample5, \"null\");\nconst expected = [\n  { name: 'Moltres', num: '146' },\n  { name: 'Dragonite', num: '149' },\n  { name: 'Mewtwo', num: '150' },\n  { name: 'Mew', num: '151' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Moltres',\n-     num: '146'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   },\n-   {\n-     name: 'Mewtwo',\n-     num: '150'\n-   },\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Moltres',\n-     num: '146'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   },\n-   {\n-     name: 'Mewtwo',\n-     num: '150'\n-   },\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:53:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "d739cbf8-ce4e-447a-970c-d77882153f94",
              "parentUUID": "394b6ada-cb0f-4ef9-9603-a399b939f40f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ea8e176a-95b5-496a-a39d-102c8c998a36",
            "a19fa0b6-8cdd-41e3-a82d-ff910c85561c",
            "d01c1d03-2cd9-40f5-aae6-eab9b0cff23f",
            "d739cbf8-ce4e-447a-970c-d77882153f94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e03307be-bd81-45da-b820-cef7267b22bc",
          "title": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/find-by/weakness/spec.js",
          "file": "/logic/find-by/weakness/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Electric",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 1, Electric",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample1, 'Electric');\nconst expected = [\n  {\n    name: 'Squirtle',\n    num: '007'\n  },\n  {\n    name: 'Wartortle',\n    num: '008'\n  },\n  {\n    name: 'Blastoise',\n    num: '009'\n  },\n  {\n    name: 'Butterfree',\n    num: '012'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:34:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "efb09d7e-4b12-4a7d-a351-1368a76b0aa0",
              "parentUUID": "e03307be-bd81-45da-b820-cef7267b22bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample2, 'Bug');\nconst expected = [\n  {\n    name: 'Paras',\n    num: '046'\n  },\n  {\n    name: 'Parasect',\n    num: '047'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:49:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "1d88da59-b1bb-4a01-a412-4b92a844b8f1",
              "parentUUID": "e03307be-bd81-45da-b820-cef7267b22bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Fighting",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 3, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample3, 'Fighting');\nconst expected = [\n  {\n    name: 'Dewgong',\n    num: '087'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:60:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "e2c6a19d-1efb-4945-87c1-01c12664fc1d",
              "parentUUID": "e03307be-bd81-45da-b820-cef7267b22bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample4, 'Normal');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:66:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "bd6cf82b-03e9-490f-85c4-4bbf0bb5a9eb",
              "parentUUID": "e03307be-bd81-45da-b820-cef7267b22bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 5, Dragon",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample5, 'Dragon');\nconst expected = [\n  {\n    name: 'Dratini',\n    num: '147'\n  },\n  {\n    name: 'Dragonair',\n    num: '148'\n  },\n  {\n    name: 'Dragonite',\n    num: '149'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:85:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "999e89dc-73b2-4dc2-98be-ab95858c8caf",
              "parentUUID": "e03307be-bd81-45da-b820-cef7267b22bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "efb09d7e-4b12-4a7d-a351-1368a76b0aa0",
            "1d88da59-b1bb-4a01-a412-4b92a844b8f1",
            "e2c6a19d-1efb-4945-87c1-01c12664fc1d",
            "bd6cf82b-03e9-490f-85c4-4bbf0bb5a9eb",
            "999e89dc-73b2-4dc2-98be-ab95858c8caf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
          "title": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/type-stats/spec.js",
          "file": "/logic/type-stats/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, Grass",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Grass",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Grass');\nconst expected = {\n  typeCount: 5,\n  typeName: 'Grass',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 5,\n-   typeName: 'Grass',\n-   weaknessCount: 0\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 5,\n-   typeName: 'Grass',\n-   weaknessCount: 0\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:19:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "91f57c09-7a16-44a0-ae7c-1ae8eafccfa6",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Fire",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Fire",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Fire');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fire',\n  weaknessCount: 5\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fire',\n-   weaknessCount: 5\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fire',\n-   weaknessCount: 5\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:29:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "a608e7c5-5a7d-4e6e-a6f8-b782e472f527",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Normal');\nconst expected = {\n  typeCount: 2,\n  typeName: 'Normal',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 2,\n-   typeName: 'Normal',\n-   weaknessCount: 0\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 2,\n-   typeName: 'Normal',\n-   weaknessCount: 0\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:39:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "67363abd-fabd-4c6e-adc5-7b3bba41dc9f",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Fighting",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Fighting');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fighting',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fighting',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fighting',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:49:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "41adf0d1-999b-4329-accd-562087fdc8e8",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Dragon",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Dragon');\nconst expected = {\n  typeCount: 3,\n  typeName: 'Dragon',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 3,\n-   typeName: 'Dragon',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 3,\n-   typeName: 'Dragon',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:59:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "7a35d2ea-b522-4546-b2f2-bdffdf09f855",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Fairy",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Fairy",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Fairy');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fairy',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fairy',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fairy',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:69:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "3dc4afa7-faa0-4a95-9421-2a3d2474759b",
              "parentUUID": "ab5ac9f0-e758-4fb2-ba40-637959f86509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "91f57c09-7a16-44a0-ae7c-1ae8eafccfa6",
            "a608e7c5-5a7d-4e6e-a6f8-b782e472f527",
            "67363abd-fabd-4c6e-adc5-7b3bba41dc9f",
            "41adf0d1-999b-4329-accd-562087fdc8e8",
            "7a35d2ea-b522-4546-b2f2-bdffdf09f855",
            "3dc4afa7-faa0-4a95-9421-2a3d2474759b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d41fe75-8e04-410e-a495-8974de4ac641",
          "title": "valuesForKey(pokeData, key) : returns all unique values stored in that key",
          "fullFile": "/home/hackyourfuture/Documents/HYF/06-web-apps/w4/ex/pokedex-api/logic/values-for-key/spec.js",
          "file": "/logic/values-for-key/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, id",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, id",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'id');\nconst expected = [43, 44, 45, 46, 47];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   43,\n-   44,\n-   45,\n-   46,\n-   47\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   43,\n-   44,\n-   45,\n-   46,\n-   47\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:15:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "94e66d94-1fe6-4f5a-a6e7-a6e3f54c2acf",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, name",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'name');\nconst expected = [\n  'Oddish',\n  'Gloom',\n  'Vileplume',\n  'Paras',\n  'Parasect'\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   'Oddish',\n-   'Gloom',\n-   'Vileplume',\n-   'Paras',\n-   'Parasect'\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   'Oddish',\n-   'Gloom',\n-   'Vileplume',\n-   'Paras',\n-   'Parasect'\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:27:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "5a14d07e-b202-43eb-94c0-a6943fca4f9f",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, num",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, num",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'num');\nconst expected = ['083', '084', '085', '086', '087'];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   '083',\n-   '084',\n-   '085',\n-   '086',\n-   '087'\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   '083',\n-   '084',\n-   '085',\n-   '086',\n-   '087'\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:33:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "9dccf2de-809e-4f94-a9ac-a3244970a38f",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, multipliers",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, multipliers",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'multipliers');\nconst expected = [\n  null,\n  [2.19, 2.24],\n  [1.04, 1.96]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   null,\n-   [\n-     2.19,\n-     2.24\n-   ],\n-   [\n-     1.04,\n-     1.96\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   null,\n-   [\n-     2.19,\n-     2.24\n-   ],\n-   [\n-     1.04,\n-     1.96\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:43:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "c8be8556-e3e7-4db7-b2f8-09bdb513c402",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, weaknesses",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, weaknesses",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'weaknesses');\nconst expected = [\n  ['Bug', 'Ghost', 'Dark'],\n  ['Fire', 'Electric', 'Ice', 'Flying', 'Rock'],\n  ['Fire', 'Bug', 'Rock', 'Ghost', 'Dark', 'Steel'],\n  ['Ground'],\n  ['Water', 'Ground', 'Rock'],\n  ['Fire', 'Flying', 'Rock'],\n  ['Fighting'],\n  ['Electric', 'Grass'],\n  ['Electric', 'Rock'],\n  ['Electric', 'Grass', 'Fighting', 'Rock']\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n+ undefined\n...\n- [\n-   [\n-     'Bug',\n-     'Ghost',\n-     'Dark'\n-   ],\n-   [\n-     'Fire',\n-     'Electric',\n-     'Ice',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Bug',\n-     'Rock',\n-     'Ghost',\n-     'Dark',\n-     'Steel'\n-   ],\n-   [\n-     'Ground'\n-   ],\n-   [\n-     'Water',\n-     'Ground',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fighting'\n-   ],\n-   [\n-     'Electric',\n-     'Grass'\n-   ],\n-   [\n-     'Electric',\n-     'Rock'\n-   ],\n-   [\n-     'Electric',\n-     'Grass',\n-     'Fighting',\n-     'Rock'\n...",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n+ undefined\n...\n- [\n-   [\n-     'Bug',\n-     'Ghost',\n-     'Dark'\n-   ],\n-   [\n-     'Fire',\n-     'Electric',\n-     'Ice',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Bug',\n-     'Rock',\n-     'Ghost',\n-     'Dark',\n-     'Steel'\n-   ],\n-   [\n-     'Ground'\n-   ],\n-   [\n-     'Water',\n-     'Ground',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fighting'\n-   ],\n-   [\n-     'Electric',\n-     'Grass'\n-   ],\n-   [\n-     'Electric',\n-     'Rock'\n-   ],\n-   [\n-     'Electric',\n-     'Grass',\n-     'Fighting',\n-     'Rock'\n...\n    at Context.<anonymous> (logic/values-for-key/spec.js:60:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "d68fa3f1-0e23-47ac-8f7e-3a4c72d6306d",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, prev_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, prev_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'prev_evolution');\nconst expected = [\n  [\n    { num: '129', name: 'Magikarp' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Magikarp',\n-       num: '129'\n-     }\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Magikarp',\n-       num: '129'\n-     }\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:70:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "655e1206-a156-499c-8d32-39ed690f506a",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, next_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 5, next_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample5, 'next_evolution');\nconst expected = [\n  [\n    { num: '148', name: 'Dragonair' },\n    { num: '149', name: 'Dragonite' }\n  ],\n  [\n    { num: '149', name: 'Dragonite' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Dragonair',\n-       num: '148'\n-     },\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ],\n-   [\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Dragonair',\n-       num: '148'\n-     },\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ],\n-   [\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:84:12)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "4fa6cf2c-3af2-42f4-bc1c-223bf4e2aa65",
              "parentUUID": "8d41fe75-8e04-410e-a495-8974de4ac641",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "94e66d94-1fe6-4f5a-a6e7-a6e3f54c2acf",
            "5a14d07e-b202-43eb-94c0-a6943fca4f9f",
            "9dccf2de-809e-4f94-a9ac-a3244970a38f",
            "c8be8556-e3e7-4db7-b2f8-09bdb513c402",
            "d68fa3f1-0e23-47ac-8f7e-3a4c72d6306d",
            "655e1206-a156-499c-8d32-39ed690f506a",
            "4fa6cf2c-3af2-42f4-bc1c-223bf4e2aa65"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}